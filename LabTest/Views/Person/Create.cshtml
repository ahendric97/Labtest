@model LabTest.Models.Person

@{
    ViewBag.Title = "Create";
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ddlStates", new SelectList(ViewBag.States, "state_id", "state_code"), "Select State", new { @class = "btn btn-secondary dropdown-toggle" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    @Html.RadioButton("gender", "M", new { id = "IsMale" }) Male
                    @Html.RadioButton("gender", "F", new { id = "IsFemale" }) Female
                    @Html.RadioButton("gender", "U", new { id = "Unknown" }) Unknown
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">

                <div class="input-group date" data-provide="datepicker" name="DOB" id="DOB">
                    <input type="text" class="form-control" name="DOB">
                    <div class="input-group-addon" align="left">
                        <span class="glyphicon glyphicon-th"></span>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script>
    $.validator.addMethod("selectNone",
        function (value, element) {
            return this.optional(element) || element.selectedIndex != 0;
        },
        "Please select an option."
    );


    $(function () {
        $("#myform").validate({
            rules: {
                ProductCategoryList: {
                    selectNone: true
                }

            },
            messages: {
                ProductCategoryList: {
                    selectNone: "This field is required"
                }
            }
        });
    });
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

